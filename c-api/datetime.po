# SOME DESCRIPTIVE TITLE.
# Copyright (C) 2001-2016, Python Software Foundation
# This file is distributed under the same license as the Python package.
# FIRST AUTHOR <EMAIL@ADDRESS>, YEAR.
#
#, fuzzy
msgid ""
msgstr ""
"Project-Id-Version: Python 3.6\n"
"Report-Msgid-Bugs-To: \n"
"POT-Creation-Date: 2017-04-02 22:11+0200\n"
"PO-Revision-Date: YEAR-MO-DA HO:MI+ZONE\n"
"Last-Translator: FULL NAME <EMAIL@ADDRESS>\n"
"Language-Team: LANGUAGE <LL@li.org>\n"
"Language: fr\n"
"MIME-Version: 1.0\n"
"Content-Type: text/plain; charset=UTF-8\n"
"Content-Transfer-Encoding: 8bit\n"

#: ../Doc/c-api/datetime.rst:6
msgid "DateTime Objects"
msgstr "Objets DateTime"

#: ../Doc/c-api/datetime.rst:8
msgid ""
"Various date and time objects are supplied by the :mod:`datetime` module. "
"Before using any of these functions, the header file :file:`datetime.h` must "
"be included in your source (note that this is not included by :file:`Python."
"h`), and the macro :c:macro:`PyDateTime_IMPORT` must be invoked, usually as "
"part of the module initialisation function.  The macro puts a pointer to a C "
"structure into a static variable, :c:data:`PyDateTimeAPI`, that is used by "
"the following macros."
msgstr ""
"De nombreux objets *date* et *time* sont exposés par le module :mod:"
"`DateTime`. Avant d'utiliser une de ces fonctions, le fichier d'en-tête :"
"file:`datetime.h` doit être inclus dans vos sources (veuillez noter qu'il "
"n'est pas inclus par le fichier :file:`Python.h`) et la macro :c:macro:"
"`PyDateTime_IMPORT` doit-être invoquée, généralement lors de la fonction "
"d'initialisation du module. La macro crée un pointeur vers une structure C "
"et place celui-ci dans une variable statique, :c:data:`PyDateTimeAPI`, qui "
"est utilisée par les macros suivantes."

#: ../Doc/c-api/datetime.rst:16
msgid "Type-check macros:"
msgstr "Macros pour vérifier les types :"

#: ../Doc/c-api/datetime.rst:20
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType` or a subtype "
"of :c:data:`PyDateTime_DateType`.  *ob* must not be *NULL*."
msgstr ""
"Renvoie vrai si *ob* est de type :c:data:`PyDateTime_DateType` ou un sous-"
"type de :c:data:`PyDateTime_DateType`. *ob* ne doit pas être *NULL*."

#: ../Doc/c-api/datetime.rst:26
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateType`. *ob* must not "
"be *NULL*."
msgstr ""
"Renvoie vrai si *ob* est de type :c:data:`PyDateTime_DateType`. *ob* ne doit "
"pas être *NULL*."

#: ../Doc/c-api/datetime.rst:32
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType` or a "
"subtype of :c:data:`PyDateTime_DateTimeType`.  *ob* must not be *NULL*."
msgstr ""
"Renvoie vrai si *ob* est de type :c:data:`PyDateTime_DateTimeType` ou un "
"sous-type de :c:data:`PyDateTime_DateTimeType`. *ob* ne doit pas être *NULL*."

#: ../Doc/c-api/datetime.rst:38
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DateTimeType`. *ob* must "
"not be *NULL*."
msgstr ""
"Renvoie vrai si *ob* est de type :c:data:`PyDateTime_DateTimeType`. *ob* ne "
"doit pas être *NULL*."

#: ../Doc/c-api/datetime.rst:44
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType` or a subtype "
"of :c:data:`PyDateTime_TimeType`.  *ob* must not be *NULL*."
msgstr ""
"Renvoie vrai si *ob* est de type :c:data:`PyDateTime_TimeType` ou un sous-"
"type de :c:data:`PyDateTime_TimeType`.  *ob* ne doit pas être *NULL*."

#: ../Doc/c-api/datetime.rst:50
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TimeType`. *ob* must not "
"be *NULL*."
msgstr ""
"Renvoie vrai si *ob* est de type :c:data:`PyDateTime_TimeType`. *ob* ne doit "
"pas être *NULL*."

#: ../Doc/c-api/datetime.rst:56
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType` or a subtype "
"of :c:data:`PyDateTime_DeltaType`.  *ob* must not be *NULL*."
msgstr ""
"Renvoie vrai si *ob* est de type :c:data:`PyDateTime_DeltaType` ou un sous-"
"type de :c:data:`PyDateTime_DeltaType`. *ob* ne doit pas être *NULL*."

#: ../Doc/c-api/datetime.rst:62
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_DeltaType`. *ob* must not "
"be *NULL*."
msgstr ""
"Renvoie vrai si *ob* est de type :c:data:`PyDateTime_DeltaType`. *ob* ne "
"doit pas être *NULL*."

#: ../Doc/c-api/datetime.rst:68
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType` or a subtype "
"of :c:data:`PyDateTime_TZInfoType`.  *ob* must not be *NULL*."
msgstr ""
"Renvoie vrai si *ob* est de type :c:data:`PyDateTime_TZInfoType` ou un sous-"
"type de :c:data:`PyDateTime_TZInfoType`. *ob* ne doit pas être *NULL*."

#: ../Doc/c-api/datetime.rst:74
msgid ""
"Return true if *ob* is of type :c:data:`PyDateTime_TZInfoType`. *ob* must "
"not be *NULL*."
msgstr ""
"Renvoie vrai si *ob* est de type :c:data:`PyDateTime_TZInfoType`. *ob* ne "
"doit pas être *NULL*."

#: ../Doc/c-api/datetime.rst:78
msgid "Macros to create objects:"
msgstr "Macros pour créer des objets :"

#: ../Doc/c-api/datetime.rst:82
msgid ""
"Return a ``datetime.date`` object with the specified year, month and day."
msgstr ""

#: ../Doc/c-api/datetime.rst:87
msgid ""
"Return a ``datetime.datetime`` object with the specified year, month, day, "
"hour, minute, second and microsecond."
msgstr ""

#: ../Doc/c-api/datetime.rst:93
msgid ""
"Return a ``datetime.time`` object with the specified hour, minute, second "
"and microsecond."
msgstr ""

#: ../Doc/c-api/datetime.rst:99
msgid ""
"Return a ``datetime.timedelta`` object representing the given number of "
"days, seconds and microseconds.  Normalization is performed so that the "
"resulting number of microseconds and seconds lie in the ranges documented "
"for ``datetime.timedelta`` objects."
msgstr ""

#: ../Doc/c-api/datetime.rst:105
msgid ""
"Macros to extract fields from date objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Date`, including subclasses (such as :c:data:"
"`PyDateTime_DateTime`).  The argument must not be *NULL*, and the type is "
"not checked:"
msgstr ""
"Macros pour extraire les champs des objets *date*. L'argument doit être une "
"instance de :c:data:`PyDateTime_Date`, ou une sous-classe (telle que :c:data:"
"`PyDateTime_DateTime`). L'argument ne doit pas être *NULL*, et le type n'est "
"pas vérifié :"

#: ../Doc/c-api/datetime.rst:112
msgid "Return the year, as a positive int."
msgstr "Renvoie l'année, sous forme d'entier positif."

#: ../Doc/c-api/datetime.rst:117
msgid "Return the month, as an int from 1 through 12."
msgstr "Renvoie le mois, sous forme d'entier allant de 1 à 12."

#: ../Doc/c-api/datetime.rst:122
msgid "Return the day, as an int from 1 through 31."
msgstr "Renvoie le jour, sous forme d'entier allant de 1 à 31."

#: ../Doc/c-api/datetime.rst:125
msgid ""
"Macros to extract fields from datetime objects.  The argument must be an "
"instance of :c:data:`PyDateTime_DateTime`, including subclasses. The "
"argument must not be *NULL*, and the type is not checked:"
msgstr ""
"Macros pour extraire les champs des objets *datetime*. L'argument doit être "
"une instance de :c:data:`PyDateTime_DateTime` ou une sous-classe de celle-"
"ci. L'argument ne doit pas être *NULL*, et le type n'est pas vérifié :"

#: ../Doc/c-api/datetime.rst:131 ../Doc/c-api/datetime.rst:155
msgid "Return the hour, as an int from 0 through 23."
msgstr "Renvoie l'heure, sous forme d'entier allant de 0 à 23."

#: ../Doc/c-api/datetime.rst:136 ../Doc/c-api/datetime.rst:160
msgid "Return the minute, as an int from 0 through 59."
msgstr "Renvoie la minute, sous forme d'entier allant de 0 à 59."

#: ../Doc/c-api/datetime.rst:141 ../Doc/c-api/datetime.rst:165
msgid "Return the second, as an int from 0 through 59."
msgstr "Renvoie la seconde, sous forme d'entier allant de 0 à 59."

#: ../Doc/c-api/datetime.rst:146 ../Doc/c-api/datetime.rst:170
msgid "Return the microsecond, as an int from 0 through 999999."
msgstr "Renvoie la microseconde, sous forme d'entier allant de 0 à 999999."

#: ../Doc/c-api/datetime.rst:149
msgid ""
"Macros to extract fields from time objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Time`, including subclasses. The argument "
"must not be *NULL*, and the type is not checked:"
msgstr ""
"Macros pour extraire les champs des objets *time*. L'argument doit être une "
"instance de :c:data:`PyDateTime_Time` ou une sous-classe de celle-ci. "
"L'argument ne doit pas être *NULL*, et le type n'est pas vérifié :"

#: ../Doc/c-api/datetime.rst:173
msgid ""
"Macros to extract fields from time delta objects.  The argument must be an "
"instance of :c:data:`PyDateTime_Delta`, including subclasses. The argument "
"must not be *NULL*, and the type is not checked:"
msgstr ""
"Macros pour extraire les champs des objets *time delta*. L'argument doit "
"être une instance de :c:data:`PyDateTime_Delta` ou une sous-classe de celle-"
"ci. L'argument ne doit pas être *NULL*, et le type n'est pas vérifié :"

#: ../Doc/c-api/datetime.rst:179
msgid "Return the number of days, as an int from -999999999 to 999999999."
msgstr ""
"Renvoie le nombre de jours, sous forme d'entier allant de -999999999 à "
"999999999."

#: ../Doc/c-api/datetime.rst:186
msgid "Return the number of seconds, as an int from 0 through 86399."
msgstr "Renvoie le nombre de secondes sous forme d'entier allant de 0 à 86399."

#: ../Doc/c-api/datetime.rst:193
msgid "Return the number of microseconds, as an int from 0 through 999999."
msgstr ""
"Renvoie le nombre de microsecondes, sous forme d'entier allant de 0 à 999999."

#: ../Doc/c-api/datetime.rst:198
msgid "Macros for the convenience of modules implementing the DB API:"
msgstr "Macros de confort pour les modules implémentant l'API DB :"

#: ../Doc/c-api/datetime.rst:202
msgid ""
"Create and return a new ``datetime.datetime`` object given an argument tuple "
"suitable for passing to ``datetime.datetime.fromtimestamp()``."
msgstr ""

#: ../Doc/c-api/datetime.rst:208
msgid ""
"Create and return a new ``datetime.date`` object given an argument tuple "
"suitable for passing to ``datetime.date.fromtimestamp()``."
msgstr ""
